---
title: Building your website using R {blogdown}
author: Shilaan Alzahawi
date: '2021-05-12'
draft: no
slug: building-your-website-using-r-blogdown
categories:
  - rmarkdown
  - github
  - tidyverse
subtitle: 'A concise step-by-step guide'
summary: 'A concise step-by-step guide to building your (academic) website using {blogdown}, GitHub, the Hugo Wowchemy starter-academic theme, and Netlify.'
authors: 
  - admin
lastmod: '2021-05-12T13:46:11-07:00'
featured: no
image:
  placement: 2
  caption: 'Image credit: [**Xie, Thomas, Hill 2018**](https://www.routledge.com/blogdown-Creating-Websites-with-R-Markdown/Xie-Hill-Thomas/p/book/9780815363729)'
  focal_point: 'Center'
  preview_only: no
projects: []
---

{{< toc >}} 

I finally decided to bite the bullet and create my own website using {{< icon name="r-project" pack="fab" >}} `{blogdown}`. If you're like me, you've already seen many inspiring examples of websites created with blogdown (for example, the webpages of [Julia Silge](https://juliasilge.com/about/), [Silvia Canel√≥n](https://silvia.rbind.io), and  [Iv√°n Mauricio Cely Toro](https://mauriciocely.github.io)), but the process of creating it sounds slightly overwhelming. üò∞ 

If so, this post is for you: I'll walk you through my step-by-step process of building a site using [blogdown](https://github.com/rstudio/blogdown) and the [Wowchemy](https://wowchemy.com) theme for [Hugo](https://gohugo.io) and deploying it with [Netlify](https://www.netlify.com). I largely followed the process documented [here](https://alison.rbind.io/post/new-year-new-blogdown/) by Alison Hill. The good news: we'll mostly build and customize the website from the comfort of RStudio. ü•≥ 

My goal is to write a concise step-by-step guide without having you worry too much about what's happening behind the scenes. For a much more comprehensive guide, please check out [Alison's blog](https://alison.rbind.io/post/new-year-new-blogdown/).


## Prerequisites 

{{< icon name="download" pack="fas" >}} Install a recent version of [R](https://cran.r-project.org) and [RStudio](https://www.rstudio.com/products/rstudio/download/)  
{{< icon name="github" pack="fab" >}} [Create](https://github.com/join) a GitHub account  
{{< icon name="r-project" pack="fab" >}} [Connect](https://happygitwithr.com/connect-intro.html) RStudio to GitHub (preferably with [HTTPS](https://happygitwithr.com/credential-caching.html#credential-caching))  
{{< icon name="user-plus" pack="fas" >}} [Sign up](https://www.netlify.com) with Netlify using your GitHub account  

### Resources for getting started with GitHub {{< icon name="github" pack="fab" >}}
‚öíÔ∏é [Happy Git and GitHub for the useR](https://happygitwithr.com/github-acct.html)  
‚öíÔ∏é [The Turing Way Guide for Collaboration](https://the-turing-way.netlify.app/collaboration/github-novice.html#)   
‚öíÔ∏é [Start Your Lab guide](https://www.startyourlab.com/docs/github-accounts/) [^5] 

[^5]: Thank you to [Ari Dyckovsky](https://www.aridyckovsky.com) for [suggesting this addition{{< icon name="twitter" pack="fab" >}}](https://twitter.com/adyckovsky/status/1393346563481735168?s=20) to the post 

## Step 1: Create GitHub repository 

{{< cta cta_text="Click to create a new repository" cta_link="https://github.com/new" cta_new_tab="true" >}}

{{% callout note %}}
Use the following settings:  
‚úì Keep the repository `Public`  
‚úì Add a `README` file  
‚úì Do not add `.gitignore`  
{{% /callout %}}

{{< spoiler text="Click to view screenshots for Step 1" >}}
![](new-repository.png)
{{< /spoiler >}}

## Step 2: Create project with Version Control in RStudio

‚òûÔ∏é Go to `https://github.com/your-username/your-repository`   
‚òûÔ∏é Click on the green `Code` button  
‚òû Copy the `HTTPS` link to your clipboard  
‚òû Go to `RStudio > File > New Project >  Version Control > Git`  
‚òûÔ∏éÔ∏é Copy paste the `HTTPS` link under `Repository URL`  
‚òû Click `Create Poject`  

{{< spoiler text="Click to view screenshots for Step 2" >}}
![](https.png)
![](new-project.png)
![](version-control.png)
![](git.png)
{{< /spoiler >}}

## Step 3: Create website with {blogdown}

```r
install.packages("blogdown") # install the blogdown package
library(blogdown) # load blogdown
new_site(theme = "wowchemy/starter-academic") # create your website!
```

You will now be asked if you want to serve and preview the site locally (before publishing). Type `y` in your Console. 
![](y.jpg)

A preview will show up in your Viewer Pane. Click on the  {{< icon name="external-link-alt" pack="fas" >}} "Show in new window" icon  next to the üßπ to preview your site in a browser window. 

{{< spoiler text="Click to view screenshots for Step 3" >}}
![](new-site.png)
![](viewer-in-new-window.png)
{{< /spoiler >}}

## Step 4: Push ‚¨ÜÔ∏é to GitHub 

In the console, run the following line of code to create a `.gitignore` file:
```r
file.edit("gitignore")
```
Add the following lines to the `.gitignore` file: 
```r
.Rproj.user
.Rhistory
.RData
.Ruserdata
.DS_Store
Thumbs.db
```

Before we make our first commit, we use blogdown to check all our files:
```r
blogdown::check_site()
```
This will give you a number of `[TODO]` items, like adding `public` and `resources` to the `.gitignore` file, which you can do safely. Don't worry about content flagged as `draft` or files with a future publish date. If you have a `[TODO]` item related to your `.Rprofile`, run `blogdown::config_Rprofile()`.

After running these checks, you're ready to commit to GitHub! üéâ 

{{< spoiler text="Show me how to commit to GitHub" >}}
{{% callout note %}}
‚òû Go to the `Environment` Pane  
‚òû Click on `Commit` under `Git`  
‚òû Check ‚òëÔ∏é files to `Stage` them  
‚òû Write a commit message   
‚òû `Commit` and then `Push` ‚¨ÜÔ∏é   
{{% /callout %}}
{{< /spoiler >}}

## Step 5: Deploy site with Netlify

{{< cta cta_text="Log in to Netlify with GitHub" cta_link="https://github.com/login?client_id=0eef2fa971fd9f7d46a2&return_to=%2Flogin%2Foauth%2Fauthorize%3Fclient_id%3D0eef2fa971fd9f7d46a2%26redirect_uri%3Dhttps%253A%252F%252Fapi.netlify.com%252Fauth%252Fdone%26scope%3Duser%253Aemail%26state%3DeyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJwaWQiOiI1NmMzZjE1MDcxZTIwYTE4ZGIwMDAwMGYiLCJleHAiOjE2MjA4ODA5OTYsImxvZ2luIjp0cnVlfQ.5GilGKggLeOdejJI5_1VXSWmofo5n30SKHSX77VWncQ" cta_new_tab="true" >}} 

After logging in to Netlify through GitHub, you can deploy[^1] your website and change the url to your preferred site name, as follows:

‚òû Select `New site from Git > Continuous Deployment: GitHub`  
‚òû Select your website repository  
‚òû `Deploy Site`  
‚òû `Settings > Site information > Change site name`  

[^1]: Continuous deployment ensures that your website is rebuilt every time you push‚¨ÜÔ∏é to GitHub.

Back in RStudio, change the baseurl to your new link in your configuration file: 

```r
install.packages("rstudioapi")
library(rstudioapi) # to easily navigate to files
rstudioapi::navigateToFile("config.yaml")
```
In `config.yaml`, set the following:  
```yaml
baseurl: 'http://your-site-name.netlify.app' # use the link you just created
```

Before committing, let's again run
```r
blogdown::check_site() # checks to resolve critical [TODOs] before commit
``` 

Among other things, you need to make sure that the version of Hugo that you are using locally with {blogdown} matches the version used by Netlify (which is specified in `netlify.toml`). You will likely need to change your `netlify.toml` file. Remember that you can easily navigate to this file using 
```r
rstudioapi::navigateToFile("netlify.toml") 
```

## Step 6: Customize your site with Wowchemy üé®

<center>

It's time to customize! ‚ù§Ô∏é

</center>

![](excited.jpg)

### Personal information

First, we'll edit the `About` information (called a widget) on your homepage.

```r
rstudioapi::navigateToFile("content/authors/admin/_index.md")
```

‚òû Fill in the `_index.md` with your personal information (find mine [here](https://raw.githubusercontent.com/shilaan/personal-website/main/content/authors/admin/_index.md))  
‚òû Personalize with desired [icons](https://wowchemy.com/docs/getting-started/page-builder/#icons) {{< icon name="sci-hub" pack="ai" >}}  
‚òû Add your picture called `avatar.jpg` to the `content/authors/admin/` folder 

To change (or remove) the title of your `About` widget, 
```r
rstudioapi::navigateToFile("content/home/about.md")
```
set `title: My new title`

{{< spoiler text="Show me what a personalized page looks like" >}}
The `about` page:
![](about.png)
The shortened `bio` (appears under your blogposts):
![](bio.png)
{{< /spoiler >}}

### Widgets 

To get rid of and rename the other widgets on your homepage,   
‚òû Go to the `Files` tab on your `Viewer` pane  
‚òû Open the `.md` of a widget you wish to deactivate, e.g. `hero.md` [^2]     
‚òû Write `active:false`  
‚òû Change titles to your liking with `title: My new title`  
‚òû Repeat for all other widges you wish to deactivate or personalize  

I wanted to start with a pretty minimal webpage, so I deactivated all widgets except for `about.md` and `posts.md`. 

{{< spoiler text="Click to view a screenshot for this step" >}}
![](widgets.png)
{{< /spoiler >}}

### Menu 

Now that you've deactivated some widgets, you'll no longer want to link to them in your main menu (the navigation bar at the top). 

Customize your main menu in `config/_default/menus.yaml`

``` r
rstudioapi::navigateToFile("config/_default/menus.yaml")
```

‚òû `name: My new name` to change the name of your menu items  
‚òû Remove the links to widgets that you deactivated ([here's my `menus.yaml`](https://raw.githubusercontent.com/shilaan/personal-website/main/config/_default/menus.yaml))

[^2]: The `hero` widget is the top blue pane that introduces *Hugo Academic Starter*

### Theme

![](themes.png)

‚òû Pick a built-in Wowchemy color theme   
‚òû `rstudioapi::navigateToFile("config/_default/params.yaml")`  
‚òû Set `theme: rose` (or whichever your chosen theme is; no capitalization)  

I initially chose the `Rose` theme, but decided I wanted to further customize the color theme using the steps outlined [here](https://wowchemy.com/docs/getting-started/customization/#community-themes):

‚òëÔ∏é I located the `rose.toml` file[^3]  
‚òëÔ∏é I created a new `data/themes/` folder at the root of my site   
‚òëÔ∏é I copied the `rose.toml` file into `data/themes/shilaan_theme.toml`   
‚òëÔ∏é I adjusted the colors as desired using [HTML color codes](https://htmlcolorcodes.com)  
‚òëÔ∏é I set `theme: shilaan_theme` in `config/_default/params.yaml`  

You can also [customize the font set](https://wowchemy.com/docs/getting-started/customization/#custom-font).

[^3]: Themes are in `themes/github/com/wowchemy/wowchemy-hugo-modules/wowchemy/data`. In this folder, go to `/fonts` for font sets and to `themes` for color themes. 

{{< spoiler text="Show example GitHub files for creating my own theme" >}}
{{< icon name="github" pack="fab" >}} [data/themes/shilaan_theme.toml](https://github.com/shilaan/personal-website/blob/main/data/themes/shilaan_theme.toml)   
{{< icon name="github" pack="fab" >}} [config/_default/params.yaml](https://github.com/shilaan/personal-website/blob/main/config/_default/params.yaml)   
{{< /spoiler >}}

### Website icon

By default, your website will be published with the Wowchemy icon in the web browser tab. For example: 
![](example-default-icon.png)

To get [your own Website icon](https://wowchemy.com/docs/getting-started/customization/#website-icon), save a square 512x512 pixel image named `icon.png` in your root `assets/media/` folder. My webpage should now show up in your Browser like this: ![](example-adjusted-icon.png)

{{< spoiler text="I followed the steps but my Website icon hasn't changed" >}}
I ran into this issue. Simply clear your website from your browser history. üßº I didn't realize the problem was caused by my cache until finding [this issue](https://github.com/wowchemy/wowchemy-hugo-modules/issues/1391#issuecomment-807274736).
{{< /spoiler >}}

## Step 7: Write your first post ‚úç

To remove the example posts currently populating your website (e.g., *Welcome to Wowchemy, the website builder for Hugo*), navigate to `content/post` and remove the folders associated with them (in this case, the `getting-started` folder).  

If you find these posts helpful, you can always take another look at them on the [Demo site](https://academic-demo.netlify.app) and find their underlying files at  `themes/starter-academic/exampleSite/content/post`.  

If you really want to keep these files on hand, you can save them as a draft so that they don't publish on your site anymore. You will still see them in your preview when you serve your site locally. For example:

```r
rstudioapi::navigateToFile("content/post/getting-started/index.md")
```
Now, set `draft:true` in the front matter. From now on, whenever you run `blogdown::check_site()`, you will be reminded that you have these files marked as drafts.  

We're ready to write!

![](ready.jpg)

In your console, type 

```r
blogdown::new_post(
  title = "My first post",
  ext = '.Rmarkdown',
  subdir = "post"
  )
```

In your `Files` pane, you will now have a folder (under `content/post`) with today's date and the title of your post. The crucial file is `index.Rmarkdown`: this is where you will write your post. 

Go ahead and open `index.Rmarkdown`. When you knit this[^4], your website will preview in the Viewer pane. Remember that you can click on the  {{< icon name="external-link-alt" pack="fas" >}} "Show in new window" icon  next to the üßπ to preview your site in a browser window. 

{{% callout warning %}}
Make sure you edit the `index.Rmarkdown` file, not the `index.markdown` file. The markdown file is automatically created and updated when you knit your Rmarkdown.
{{% /callout %}}

[^4]: Use either the Knit button, `command + shift + k` on Mac, or `control + shift + k` on Windows/Linux. 

Go ahead and add an R code chunk:

````
```{r echo=FALSE}`r ''`
library(ggplot2)

x = seq(-1, 1, .01)
y = sin(x^3)/(1 + x^6)

ggplot(aes(x = x, y = y)) +
geom_line() +
geom_ribbon(
  aes(ymin = 0, ymax = y), 
  fill = "pink", 
  alpha = 0.5
  ) +
theme_void() 
```
````

Knit your Rmarkdown. Check out what it looks like, write your own content, and push‚¨ÜÔ∏é to GitHub when you're ready. Don't forget about the option to run `blogdown::check_site()`.

{{< spoiler text="Show me screenshots of this step" >}}
![](index.png)
![](files.png)
![](first-post.png)
{{< /spoiler >}}


## We're done! üí™

![](minions.png)

<center>

I hope this was helpful! Feel free to [leave a comment {{< icon name="twitter" pack="fab" >}}](https://twitter.com/shilaan01/status/1393071955964665857?s=20)

</center>

  
### Acknowledgements 

My workflow, and a large part of the content of this post, is based on [Alison Hill's materials](https://alison.rbind.io/post/new-year-new-blogdown/). In addition, I would not have made this website if it wasn't for Dani√´l Lakens friendly nudging me (about 5 months ago... it took me a while to accept my fate). Thank you, Alison and Dani√´l! üôè  